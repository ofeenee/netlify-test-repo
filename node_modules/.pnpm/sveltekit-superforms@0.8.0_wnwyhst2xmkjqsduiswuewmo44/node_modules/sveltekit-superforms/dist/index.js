export class SuperFormError extends Error {
    constructor(message) {
        super(message);
        Object.setPrototypeOf(this, SuperFormError.prototype);
    }
}
/*
// Thanks to https://stackoverflow.com/a/76062131/70894
type Dot<
  BasePath extends string | number,
  SubPath extends string
> = '' extends SubPath ? BasePath : `${BasePath}.${SubPath}`;

type DefaultTargetFields = number | string | boolean | Date;

export type StringPath<
  Obj,
  TargetFields = DefaultTargetFields
> = Obj extends TargetFields
  ? ''
  : Obj extends unknown[]
  ? Dot<`${number}`, StringPath<Obj[number], TargetFields>>
  : {
      [K in keyof Obj & string]: Dot<K, StringPath<Obj[K], TargetFields>>;
    }[keyof Obj & string];
*/
